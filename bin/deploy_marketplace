#!/bin/bash
set -eu

# Flow:
## The Controller is the only unchangeable contract.
## First deploy Arbiter.
## Then send the Arbiter address during Controller deployment.
## Then deploy Controller address during module deployments.

# TODO: For a network_type node open a new shell and run:
# Need to incorporate this into the script.
# `nile node`

# Network:
network_type=localhost
# network_type=mainnet

# localhost is a ShardLabs devnet locally.
# mainnet is currently Goerli/StarkNet-alpha


# Wipe old deployment record if it exists.
rm $network_type.deployments.txt || $echo 'Will create one...'


get_address () {
    # TODO read deployment address from $network_type.deployments.txt
    # Find the line containing the alias $1.
     result=grep -o -m $1 '\b0x\w*'
     echo result
}

# Public keys of wallets (dummy/placeholder)
declare -i AdminPubKey=12345678987654321
declare -i User00PubKey=456456456
echo "here"

# Admin account contract
nile deploy Account $AdminPubKey \
    --alias AdminAccount --network $network_type
    
printf "%s\n" "$(get_address AdminAccount)"
AdminAddress=$(get_address AdminAccount)

# Lords contract 
nile deploy ERC20 328287282291 5001796 100000 0 $AdminAddress \
    --alias Lords --network $network_type
LordsAddress=$(get_address Lords)

# Realms ERC721 contract
nile deploy ERC721 90595379670387 90595379670387 000001 $AdminAddress \
    --alias Realms --network $network_type
RealmsAddress=$(get_address Realms)
